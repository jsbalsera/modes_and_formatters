<?php
/**
 * @file
 * My module.
 */

/**
 * Implements hook_entity_info_alter().
 */
function mymodule_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes'] += array(
    'example_mode' => array(
      'label' => t('Example view mode'),
      'custom settings' => TRUE,
    )
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function mymodule_field_formatter_info() {
  return array(
    'mymodule_only_one' => array(
      'label' => t('Only one item'),
      'description' => t('Displays only the first item of a multievaluated one'),
      'field types' => array('number_integer', 'number_decimal', 'number_float'),
      'settings' => array(),
    ),
    'mymodule_addition' => array(
      'label' => t('Addition Formatter'),
      'description' => t('Displays the result of the addition of all the field items'),
      'field types' => array('number_integer', 'number_decimal', 'number_float'),
      'settings' => array(),
    ),
    'mymodule_headline' => array(
      'label' => t('Headline'),
      'descriptions' => t('Display a headline as a Hx (H1, H2, H3...) HTML tag'),
      'field types' => array('text'),
      'settings' => array(
        'headline_type' => 'H3',
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function mymodule_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  if ($items) {
    switch ($display['type']) {
      case 'mymodule_only_one':
        $item = array_shift($items);

        $element[0] = array('#markup' => $item['value']);
        break;

      case 'mymodule_addition':
        $result = 0;
        foreach ($items as $item) {
          $result += $item['value'];
        }

        $element[0] = array('#markup' => $result);
        break;

      case 'mymodule_headline':
        $tag = $display['settings']['headline_type'];
        if (!in_array($tag, array('H1', 'H2', 'H3'))) {
          $tag = 'H3';
        }
        foreach ($items as $delta => $item) {
          $element[$delta] = array(
            '#markup' => format_string('<!tag>!text</!tag>', array(
                '!tag' => strtolower($tag),
                '!text' => $item['safe_value'],
              )
            ),
          );
        }

        break;
    }
  }

  return $element;

}

/**
 * Implements hook_formatter_settings_form().
 */
function mymodule_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $element = array();

  if ($display['type'] == 'mymodule_headline') {
    $element['headline_type'] = array(
      '#title' => t('Headline Type'),
      '#type' => 'select',
      '#default_value' => $settings['headline_type'],
      '#options' => array(
        'H1' => 'H1', 'H2' => 'H2', 'H3' => 'H3',
      ),
      '#required' => TRUE,
    );
  }

  return $element;
}

function mymodule_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = '';

  if ($display['type'] == 'mymodule_headline') {
    $summary = t('Type: <strong>@headline_type</strong>', array('@headline_type' => $settings['headline_type']));
  }

  return $summary;
}